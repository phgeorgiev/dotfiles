#compdef dot

_dot() {
    local line state

    _arguments -C \
        '1: :->command' \
        '*::arg:->args'

    case $state in
        command)
            _values 'dot commands' \
                'help[Show help message]' \
                'init[Initialize dotfiles setup]' \
                'link[Create symlink in /usr/local/bin for global access]' \
                'package[Package management commands]' \
                'stow[Manage dotfiles with GNU stow]' \
                'update[Update dotfiles and optionally upgrade packages]'
            ;;
        args)
            case ${line[1]} in
                package)
                    _dot_package
                    ;;
            esac
            ;;
    esac
}

_dot_package() {
    local line state

    _arguments -C \
        '1: :->subcommand' \
        '*::arg:->args'

    case $state in
        subcommand)
            _values 'dot package subcommands' \
                'add[Add packages to Brewfile and install them]' \
                'clean[Remove unused packages and cleanup Homebrew]' \
                'link[Switch between package versions]' \
                'remove[Remove packages from Brewfile and uninstall them]' \
                'update[Update packages in Brewfile to latest versions]' \
                'help[Show package help]'
            ;;
        args)
            case ${line[1]} in
                add)
                    # Complete with available brew packages
                    if command -v brew >/dev/null 2>&1; then
                        if [[ -n ${words[CURRENT]} ]]; then
                            compadd $(brew search ${words[CURRENT]} 2>/dev/null | head -20)
                        fi
                    fi
                    ;;
                remove)
                    # Complete with installed packages
                    if command -v brew >/dev/null 2>&1; then
                        local installed=($(brew list --formula 2>/dev/null; brew list --cask 2>/dev/null))
                        if [[ ${#installed[@]} -gt 0 ]]; then
                            _values 'packages' "${installed[@]}"
                        fi
                    fi
                    ;;
                update)
                    # Complete with 'all' or installed packages
                    if command -v brew >/dev/null 2>&1; then
                        local installed=($(brew list --formula 2>/dev/null; brew list --cask 2>/dev/null))
                        if [[ ${#installed[@]} -gt 0 ]]; then
                            _values 'packages' 'all[Update all packages from Brewfile]' "${installed[@]}"
                        else
                            _values 'packages' 'all[Update all packages from Brewfile]'
                        fi
                    else
                        _values 'packages' 'all[Update all packages from Brewfile]'
                    fi
                    ;;
                link)
                    # Complete with linkable packages and versions
                    _values 'linkable packages' \
                        'list[List available packages and versions]' \
                        'openjdk' \
                        'php' \
                        'node'
                    ;;
            esac
            ;;
    esac
}

_dot "$@"
